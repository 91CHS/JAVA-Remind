package com.lec.ex01_basic;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/*
JDBC를 이용한 Java와 DB연동하기

Java와 DB를 연동하기 위해서는 각 DBMS의 버전에 맞는 JRE실행환경 라이브리를 Java프로젝트에
추가해야 한다. JDBC드라이버는 DB버전에 맞는 JDBC드라이버(오라클인 경우 ojdbc???.jar)를 
등록해야 한다. (Oracle JDBC버전 참고 사이트 : https://oingdaddy.tistory.com/372)

라이브러리를 추가하는 방법

1. Java Project를 우클릭
2. Build Path > Configure Build Path > (tab)Libraires> (button)Add Jars ... > (button)Apply & Close

A. JDBC프로그램 작성 step

1. JDBC드라이버를 로드(DB에 따라 드라이버가 상이)

   a. oracle 드라이버  : oracle.jdbc.OracleDriver
   b. mariadb 드라이버 : org.mariadb.jdbc.Driver
   c. MySQL 드라이버   : com.mysql.jdbc.driver

2. Connection객체를 생성
   
   Connection객체에 연결하는 것은 DriverManager에 등록된 각 드라이버를 getConnection()
   메서드를 이용해서 식별한다. getConnection(db url주소, username, password)의 매개값을
   전달한다. 연결할 때 url식별자 정보를 이용히새 Mapping을 하고 차지 못했을 경우에는
   no sutable error가 발생한다. 찾았을 경우에는 수행결과가 Connection객체에 전달된다.
   
   a. Oracle : getConnection("jdbc:oracle:thin:@오라클DB주소:port번호:서비스id", "scott", "tiger");
   b. mariadb: getConnection("jdbc:mariadb://mariadb주소", "userID", "password");
   c. MySQL  : getConnection("jdbc:mysql://MySQLdb주소", "userID", "password");

   
*/



public class JDBCConnection {
	
	final static String DRV = "oracle.jdbc.OracleDriver";
	final static String URL = "jdbc:oracle:thin:@localhost:1521:xe";
	final static String USR = "scott";
	final static String PWD = "tiger";
			
			
	public static void main(String[] args) {
		
		Connection conn = null;
		
		try {
			Class.forName(DRV); //classRoader가 method영역에 oracle드라이버를 로딩
			conn = DriverManager.getConnection(URL, USR, PWD);
			System.out.println("DB연결성공!!!");
		} catch (Exception e) {
			System.out.println("DB연결실패!!!");
			e.printStackTrace();
		} finally {
			if(conn != null)
				try {
					conn.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
		}

	}

}
