package com.lec.ex02_generic;


public class BoxMain {

	public static void main(String[] args) {
		
		//제네릭은 컴파일단계에서 부터 에러 발생을 미연에 방지하기
		//위해서 객체 저장시에 특정객체만 제한하도록 하는 방법이다.
		
		
		Box<Apple> 과일상자 = new Box();
		
		과일상자.setObject(new Apple()); 
		Apple 사과 = 과일상자.getObject(); // 강제형변환이 불필요
		System.out.println(사과);
		System.out.println(사과.getClass());
		
			
		Box<Hammer> 도구상자 = new Box();
		도구상자.setObject(new Hammer()); 
		Hammer 망치 = 도구상자.getObject();  // 강제형변환이 불필요
		System.out.println(망치);
		System.out.println(망치.getClass());
		
//		과일상자.setObject(new Hammer());  // 과일상자에는 <Apple>타입만
//		도구상자.setObject(new Apple());   // 도구상자에는 <Hammer>타이만
	}
}

class Box<T> {
	
	private T t;

	public T getObject() {
		return t;
	}

	public void setObject(T t) {
		this.t = t;
	}
}

class Apple{
	@Override
	public String toString() {
		return "나는 사과입니다!";
	}
}
class Hammer{
	@Override
	public String toString() {
		return "나는 망치입니다.";
	}
}